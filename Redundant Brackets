import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'isBalanced' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING s as parameter.
     */

    public static String isBalanced(String s) {
        Stack<Character> stack=new Stack<Character>();
        char c[]=s.toCharArray();
        String ans;
   
      for(int i=0;i<c.length;i++)
    { if(c[i]=='('||c[i]=='['||c[i]=='{')
      
      {  stack.push(c[i]);}
      
      
         else if(stack.empty())
          {
            return "NO"; 
          }
      
       char top=stack.peek();
        
      if(c[i]==')')
      {
          
          if(top=='(')
          {
              stack.pop();
          }
         
         
          
      }
      else if(c[i]=='}')
      {
          
          if(top=='{')
          {
              stack.pop();
          }
          else if(stack.empty()||top!='{')
          {
             return "NO"; 
          }
         
      }
      else if(c[i]==']')
      {
        if(top=='[')
          {
              stack.pop();
          } else if(stack.empty()||top!='[')
          {
             return "NO"; 
          }
         
          
      } 
    }
   
  if(stack.empty())
{
ans="YES";
       }
       else
       {
        ans= "NO";
       }
       
       return ans;
        }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = Integer.parseInt(bufferedReader.readLine().trim());

        for (int tItr = 0; tItr < t; tItr++) {
            String s = bufferedReader.readLine();

            String result = Result.isBalanced(s);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedReader.close();
        bufferedWriter.close();
    }
}
